{
	Game:
	{
		ShaderDrawer: Drawer.Color.Shader()
		{
			Shader: Shader.Uniform.Timed()
			{
				VertexPath: Shaders/instanced.vertex
				FragmentPath: Shaders/menu/background.fragment

				Name: BackShader

				Defines:
				[
				]

				Debug: true
				Debug.Uniforms:
				[
					GL.Uniform.Float( n:time_m v:1 step:0.01)
				]
			}
		}

		Drawer: Drawer.Composite.Layouter()
		[
			&(Game).ShaderDrawer
		]


		Layouter: Layouter.Drawer(
			Drawer: &Game.Drawer
			)
		[
			Table( x1:60 x2:-60 y1:10 )
			[
				td( w:384 )
				[
					Layout( n:Player1.Level p:7 )
				]
				td()
				[
					Layout( n:Player1.Actions )
				]
				td()[]
				td()
				[
					Layout( n:Player2.Actions p:9 )
				]
				td( w:384 )
				[
					Layout( n:Player2.Level p:7 )
				]
			]
			Layout( n:Victory p:5 )
		]

	}
}
